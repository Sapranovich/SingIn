{"version":3,"sources":["SingIn.js","index.js"],"names":["SingIn","state","email","password","formErrors","emailValid","passwordValid","formValid","setUserInput","bind","formSubmit","e","name","target","value","this","setState","validateField","fieldName","fieldValidationErrors","match","validateForm","preventDefault","UserData","console","log","fetch","method","headers","body","JSON","stringify","rawResponse","status","json","content","alert","className","onSubmit","Object","keys","map","i","length","key","htmlFor","id","Email","placeholder","onChange","event","type","Password","disabled","Component","ReactDOM","render","document","getElementById"],"mappings":"uRA8HeA,E,kDA1Hb,aAAc,IAAD,8BACX,gBACKC,MAAM,CACTC,MAAM,GACNC,SAAS,GACTC,WAAY,CAACF,MAAO,GAAIC,SAAU,IAClCE,YAAY,EACZC,eAAe,EACfC,WAAW,GAIb,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAbP,E,yDAkBAE,GAAG,IAAD,OACPC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MACvBC,KAAKC,SAAL,eAAgBJ,EAAOE,IAAO,WAAQ,EAAKG,cAAcL,EAAME,Q,oCAGnDI,EAAWJ,GAEvB,IAAIK,EAAwBJ,KAAKd,MAAMG,WACnCC,EAAaU,KAAKd,MAAMI,WACxBC,EAAgBS,KAAKd,MAAMK,cAE/B,OAAOY,GACL,IAAK,QACHb,EAAaS,EAAMM,MAAM,uCACzBD,EAAsBjB,MAAQG,EAAa,GAAK,cAChD,MACF,IAAK,WACHC,EAAgBQ,EAAMM,MAAM,wEAC5BD,EAAsBhB,SAAWG,EAAgB,GAAI,kCAKzDS,KAAKC,SAAS,CACZZ,WAAYe,EACZd,WAAYA,EACZC,cAAeA,GACfS,KAAKM,gB,qCAMPN,KAAKC,SAAS,CAACT,UAAWQ,KAAKd,MAAMI,YAAcU,KAAKd,MAAMK,kB,0EAG/CK,G,kFACfA,EAAEW,iBACIC,EAAS,CACb,MAASR,KAAKd,MAAMC,MACpB,SAAYa,KAAKd,MAAME,UAGzBqB,QAAQC,IAAIF,G,SACcG,MAAM,qDAAsD,CAClFC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUR,K,UAEG,OARtBS,E,QAQWC,O,iCACSD,EAAYE,O,cAA5BC,E,OACNX,QAAQC,IAAIU,G,kBACLA,G,QACuB,MAAvBH,EAAYC,OACnBG,MAAM,2FACwB,MAAvBJ,EAAYC,OACnBG,MAAM,oLAENA,MAAM,wE,uIAIH,IAAD,OACR,OACE,yBAAKC,UAAU,SACZ,0BAAMA,UAAU,iBAAiBC,SAAUvB,KAAKL,YAC3C,wCAEA,yBAAK2B,UAAU,cACdE,OAAOC,KAAKzB,KAAKd,MAAMG,YAAYqC,KAAI,SAACvB,EAAUwB,GACjD,OAAG,EAAKzC,MAAMG,WAAWc,GAAWyB,OAAS,EAEzC,uBAAGC,IAAKF,GAAIxB,EAAZ,IAAwB,EAAKjB,MAAMG,WAAWc,IAGzC,OAKZ,yBAAKmB,UAAU,cACZ,2BAAOQ,QAAQ,SAAf,SAAoC,6BACpC,2BAAOC,GAAG,QAAQlC,KAAK,QAAQE,MAAOC,KAAKd,MAAM8C,MAAOC,YAAY,mBACpEC,SAAU,SAACC,GAAD,OAAS,EAAK1C,aAAa0C,OAGxC,yBAAKb,UAAU,cACZ,2BAAOQ,QAAQ,YAAf,YAA0C,6BAC1C,2BAAOC,GAAG,WAAWlC,KAAK,WAAWuC,KAAK,WAAWrC,MAAOC,KAAKd,MAAMmD,SAAUJ,YAAY,WAC5FC,SAAU,SAACC,GAAD,OAAS,EAAK1C,aAAa0C,OAGzC,4BAAQG,UAAWtC,KAAKd,MAAMM,WAA9B,gB,GAnHU+C,aCGrBC,IAASC,OAAO,kBAAC,EAAD,MAAWC,SAASC,eAAe,W","file":"static/js/main.582becfb.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\n\nclass SingIn extends Component {\n  constructor(){\n    super()\n    this.state={\n      email:'',\n      password:'',\n      formErrors: {email: '', password: ''},\n      emailValid: false,\n      passwordValid: false,\n      formValid: false\n    }\n\n    \n    this.setUserInput = this.setUserInput.bind(this);\n    this.formSubmit = this.formSubmit.bind(this);\n\n    // this.validateField = this.validateField.bind(this);\n  }\n  \n  setUserInput(e){\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({[name]: value},() => { this.validateField(name, value)});\n  }\n\n  validateField(fieldName, value){\n\n    let fieldValidationErrors = this.state.formErrors;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n    \n    switch(fieldName) {\n      case 'email':\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/);\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n        break;\n      case 'password':\n        passwordValid = value.match(/^((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[+\\-_@$!%*?&#.,;:[\\]{}]).{8,})$/);\n        fieldValidationErrors.password = passwordValid ? '': ' does not meet the requirements';\n        break;\n      default:\n        break;\n    }\n    this.setState({\n      formErrors: fieldValidationErrors,\n      emailValid: emailValid,\n      passwordValid: passwordValid}, \n      this.validateForm);\n    // console.log(fieldName, value);\n  }\n\n  validateForm() {\n    // console.log(this.state.emailValid, this.state.passwordValid); \n    this.setState({formValid: this.state.emailValid && this.state.passwordValid});\n  }\n\n  async formSubmit(e){\n    e.preventDefault();\n    const UserData={\n      'email': this.state.email,\n      'password': this.state.password\n    }\n    \n    console.log(UserData);\n    const rawResponse = await fetch('https://afternoon-falls-25894.herokuapp.com/signin', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(UserData)\n      });\n      if(rawResponse.status === 200){\n        const content = await rawResponse.json();\n        console.log(content);\n        return content;\n      }else if(rawResponse.status === 403){\n        alert(' Не верный пароль');\n      }else if(rawResponse.status === 404){\n        alert('Пользователь не зарегистрирован');\n      }else{ \n        alert('что-то другое')\n      }\n  }\n\n  render(){\n  return (\n    <div className=\"modal\">\n       <form className='form-container' onSubmit={this.formSubmit}>\n            <h3> Sing In</h3>\n          \n            <div className='formErrors'>\n            {Object.keys(this.state.formErrors).map((fieldName,i)=>{\n              if(this.state.formErrors[fieldName].length > 0){\n                return (\n                  <p key={i}>{fieldName} {this.state.formErrors[fieldName]}</p>\n                )        \n              } else {\n                return '';\n              }\n            })}\n            </div>\n            \n           <div className='form-group'>\n              <label htmlFor='Email'>Email</label><br/>\n              <input id=\"email\" name='email' value={this.state.Email} placeholder=\"Enter your Email\"\n              onChange={(event)=>this.setUserInput(event)}></input>\n           </div>\n\n           <div className='form-group'>\n              <label htmlFor='Password'>Password</label><br/>\n              <input id=\"password\" name='password' type='password' value={this.state.Password} placeholder=\"Password\"\n               onChange={(event)=>this.setUserInput(event)}></input>\n           </div>\n\n           <button disabled={!this.state.formValid}>Submit</button>\n       </form>\n    </div>\n  );\n  }\n}\n\n\nexport default SingIn;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SingIn from './SingIn';\n\n\nReactDOM.render(<SingIn/>, document.getElementById('root'));"],"sourceRoot":""}